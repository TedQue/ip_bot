
{
	# 记录上次 IP 的文件名,程序会把获取到的 IP 地址写入该文件.
	# 以便在再次运行时进行比对,只有 IP 地址发生变化时才会触发邮件通知.
	# 如果该项配置为空,则每次运行都会触发邮件通知.
	"save_last_ip": "last_ip.txt",

	## IP 获取设置
	# 提供能显示公网 IP 地址的网址列表,程序会依次尝试获取 IP,直到成功
	# 这些网址可能会失效,地址不存在了或者格式变更了,需要定期维护,方法是用浏览器访问,查看源码,并编写正确的模式串
	# 模式串中 %IP% 会被替换为一个不是很严谨的 IPv4 地址正则串 (\d{1,3}\.){3}\d{1,3})
	#
	# 编写时请注意以下细节:
	# (1) 注意很多网页用的是中文全角符号的冒号,不要写成半角冒号(可直接从浏览器复制确保一致)
	# (2) 每个可选 url 必须包含页面地址和模式串,以及可选的模式串捕获组索引,不填写第三项的话,捕获组索引缺省值为 1
	#
	# 作者不方便公布第三方网页的 url,通常来说,凡是能显示访问者 IP 地址的网页都可用作本程序的数据源
	# 假设有 https://xxx/ip 可以显示IP地址,并且可以在浏览器上查看页面的源码中查找到所显示的 IP 地址
	# 那么就可用作 IP 数据源;还有一些页面,虽然人工用浏览器上可以看到 IP 地址,但所显示的 IP 地址有可能是页面通过 xhr
	# 请求另一个 url 地址得到的.对于这种情况,可以用浏览器的开发者模式,观察后找出真正能取得 IP 地址的 url
	#
	# 确定 url 后,还需要编写一个正则模式串从页面中抽取出 IP 地址,为了方便不熟悉正则表达式的用户,
	# 可以用 %IP% 代替,程序内部会用上述提到的那个不是很严谨的正则表达式替换掉 %IP%,可以适配大多数网页的格式.
	# 对于熟悉正则表达式的用户,可以自由编写模式串,然后以测试模式运行本程序,检查是否可以得到预期中的结果.
	#
	"urls": [
		# 示例,假设 https://xxx/ip 页面可以显示 ip 地址
		# ["https://xxx/ip", "%IP%"],

		# 可以填入多个地址,程序会依次尝试直到成功为止
	],

	## SMTP 邮件服务器设置
	# 请填入 SMTP 服务的地址,端口以及是否需要 SSL,具体配置一般都可以在邮箱页面中查找到
	"smtp_host": "",
	"smtp_port": 25,
	"smtp_ssl": true,
	# 请填入登录名
	"smtp_username": "",
	# 请填入登录密码
	"smtp_password": "",

	# 邮件发送者一般需要配置为与用户名一致
	# 请填入发件人地址
	"smtp_mail_from": "",
	# 请填入收件人地址
	"smtp_mail_to": "",

	# 设置通知邮件的主题和内容,可以不设置,则程序会发送一个默认格式的邮件
	# 如果需要配置请在标题或者内容中用 %IP% 代指 IP 地址,程序运行时会用真实的 IP 地址替换之
	#"smtp_mail_subject": "",
	#"smtp_mail_content": "",
}
